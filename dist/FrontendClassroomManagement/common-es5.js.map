{"version":3,"sources":["src/app/service/program/program.service.ts","src/app/service/student/student.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,QAAM,OAAO,aAAM,sDAAA,CAAA,aAAA,CAAA,CAAY,MAAlB,CAAb;;AAKA,QAAa,cAAb;AAEE,8BAAoB,IAApB,EAAoC;AAAA;;AAAhB,aAAA,IAAA,GAAA,IAAA;AACnB;;AAHH;AAAA;AAAA,wCAKe;AACX,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAyB,OAAO,GAAG,WAAnC,CAAP;AACD;AAPH;AAAA;AAAA,sCASgB,OAThB,EASgC;AAC5B,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAwB,OAAO,GAAG,WAAlC,EAA+C,OAA/C,CAAP;AACD;AAXH;AAAA;AAAA,mCAaa,EAbb,EAauB;AACnB,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAuB,OAAO,uBAAgB,EAAhB,CAA9B,CAAP;AACD;AAfH;AAAA;AAAA,sCAiBgB,EAjBhB,EAiB4B,OAjB5B,EAiB4C;AACxC,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAuB,OAAO,uBAAgB,EAAhB,CAA9B,EAAoD,OAApD,CAAP;AACD;AAnBH;AAAA;AAAA,sCAqBgB,EArBhB,EAqB0B;AACtB,iBAAO,KAAK,IAAL,WAA0B,OAAO,uBAAgB,EAAhB,CAAjC,CAAP;AACD;AAvBH;AAAA;AAAA,8CAyBwB,EAzBxB,EAyBkC;AAC9B,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAwB,OAAO,uBAAgB,EAAhB,aAA/B,CAAP;AACD;AA3BH;;AAAA;AAAA,OAAA;;;;cAE4B,iDAAA,CAAA,YAAA;;;;AAFf,IAAA,cAAc,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAH1B,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAG0B,CAAA,EAAd,cAAc,CAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNb,QAAM,OAAO,aAAM,sDAAA,CAAA,aAAA,CAAA,CAAY,MAAlB,CAAb;;AAKA,QAAa,cAAb;AAEE,8BAAoB,IAApB,EAAoC;AAAA;;AAAhB,aAAA,IAAA,GAAA,IAAA;AACnB;;AAHH;AAAA;AAAA,wCAKe;AACX,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAyB,OAAO,GAAG,WAAnC,CAAP;AACD;AAPH;AAAA;AAAA,sCASgB,OAThB,EASgC;AAC5B,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAwB,OAAO,GAAG,WAAlC,EAA+C,OAA/C,CAAP;AACD;AAXH;AAAA;AAAA,mCAaa,EAbb,EAauB;AACnB,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAuB,OAAO,uBAAgB,EAAhB,CAA9B,CAAP;AACD;AAfH;AAAA;AAAA,sCAiBgB,EAjBhB,EAiB4B,OAjB5B,EAiB4C;AACxC,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAuB,OAAO,uBAAgB,EAAhB,CAA9B,EAAoD,OAApD,CAAP;AACD;AAnBH;AAAA;AAAA,sCAqBgB,EArBhB,EAqB0B;AACtB,iBAAO,KAAK,IAAL,WAA0B,OAAO,uBAAgB,EAAhB,CAAjC,CAAP;AACD;AAvBH;;AAAA;AAAA,OAAA;;;;cAE4B,iDAAA,CAAA,YAAA;;;;AAFf,IAAA,cAAc,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAH1B,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAG0B,CAAA,EAAd,cAAc,CAAd","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {environment} from \"../../../environments/environment\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {Program} from \"../../interface/program\";\r\nimport {Module} from \"../../interface/module\";\r\n\r\nconst API_URL = `${environment.apiUrl}`\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProgramService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getAllProgram(): Observable<Program[]> {\r\n    return this.http.get<Program[]>(API_URL + '/programs');\r\n  }\r\n\r\n  createProgram(program: Program): Observable<Program> {\r\n    return this.http.post<Program>(API_URL + '/programs', program);\r\n  }\r\n\r\n  getProgram(id: number): Observable<Program> {\r\n    return this.http.get<Program>(API_URL + `/programs/${id}`)\r\n  }\r\n\r\n  updateProgram(id: number, program: Program): Observable<Program> {\r\n    return this.http.put<Program>(API_URL + `/programs/${id}`, program)\r\n  }\r\n\r\n  deleteProgram(id: number): Observable<Program> {\r\n    return this.http.delete<Program>(API_URL + `/programs/${id}`);\r\n  }\r\n\r\n  getAllModuleByProgram(id: number): Observable<Module[]> {\r\n    return this.http.get<Module[]>(API_URL + `/programs/${id}/modules`);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {environment} from \"../../../environments/environment\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {Student} from \"../../interface/student\";\r\n\r\nconst API_URL = `${environment.apiUrl}`\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StudentService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getAllStudent(): Observable<Student[]> {\r\n    return this.http.get<Student[]>(API_URL + '/students');\r\n  }\r\n\r\n  createStudent(student: Student): Observable<Student> {\r\n    return this.http.post<Student>(API_URL + '/students', student);\r\n  }\r\n\r\n  getStudent(id: number): Observable<Student> {\r\n    return this.http.get<Student>(API_URL + `/students/${id}`)\r\n  }\r\n\r\n  updateStudent(id: number, student: Student): Observable<Student> {\r\n    return this.http.put<Student>(API_URL + `/students/${id}`, student)\r\n  }\r\n\r\n  deleteStudent(id: number): Observable<Student> {\r\n    return this.http.delete<Student>(API_URL + `/students/${id}`);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"common-es5.js"}