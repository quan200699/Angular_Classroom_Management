{"version":3,"sources":["./src/app/service/program/program.service.ts","./src/app/service/student/student.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACqB;AACd;AAKhD,MAAM,OAAO,GAAG,GAAG,qEAAW,CAAC,MAAM,EAAE;AAKvC,IAAa,cAAc,GAA3B,MAAa,cAAc;IAEzB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACpC,CAAC;IAED,aAAa;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,OAAO,GAAG,WAAW,CAAC,CAAC;IACzD,CAAC;IAED,aAAa,CAAC,OAAgB;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAU,OAAO,GAAG,WAAW,EAAE,OAAO,CAAC,CAAC;IACjE,CAAC;IAED,UAAU,CAAC,EAAU;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,OAAO,GAAG,aAAa,EAAE,EAAE,CAAC;IAC5D,CAAC;IAED,aAAa,CAAC,EAAU,EAAE,OAAgB;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,OAAO,GAAG,aAAa,EAAE,EAAE,EAAE,OAAO,CAAC;IACrE,CAAC;IAED,aAAa,CAAC,EAAU;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAU,OAAO,GAAG,aAAa,EAAE,EAAE,CAAC,CAAC;IAChE,CAAC;IAED,qBAAqB,CAAC,EAAU;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,OAAO,GAAG,aAAa,EAAE,UAAU,CAAC,CAAC;IACtE,CAAC;CACF;;YA1B2B,+DAAU;;AAFzB,cAAc;IAH1B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,cAAc,CA4B1B;AA5B0B;;;;;;;;;;;;;;;;;;;;ACZc;AACqB;AACd;AAIhD,MAAM,OAAO,GAAG,GAAG,qEAAW,CAAC,MAAM,EAAE;AAKvC,IAAa,cAAc,GAA3B,MAAa,cAAc;IAEzB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACpC,CAAC;IAED,aAAa;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,OAAO,GAAG,WAAW,CAAC,CAAC;IACzD,CAAC;IAED,aAAa,CAAC,OAAgB;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAU,OAAO,GAAG,WAAW,EAAE,OAAO,CAAC,CAAC;IACjE,CAAC;IAED,UAAU,CAAC,EAAU;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,OAAO,GAAG,aAAa,EAAE,EAAE,CAAC;IAC5D,CAAC;IAED,aAAa,CAAC,EAAU,EAAE,OAAgB;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,OAAO,GAAG,aAAa,EAAE,EAAE,EAAE,OAAO,CAAC;IACrE,CAAC;IAED,aAAa,CAAC,EAAU;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAU,OAAO,GAAG,aAAa,EAAE,EAAE,CAAC,CAAC;IAChE,CAAC;CACF;;YAtB2B,+DAAU;;AAFzB,cAAc;IAH1B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,cAAc,CAwB1B;AAxB0B","file":"common-es2015.js","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {environment} from \"../../../environments/environment\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {Program} from \"../../interface/program\";\r\nimport {Module} from \"../../interface/module\";\r\n\r\nconst API_URL = `${environment.apiUrl}`\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProgramService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getAllProgram(): Observable<Program[]> {\r\n    return this.http.get<Program[]>(API_URL + '/programs');\r\n  }\r\n\r\n  createProgram(program: Program): Observable<Program> {\r\n    return this.http.post<Program>(API_URL + '/programs', program);\r\n  }\r\n\r\n  getProgram(id: number): Observable<Program> {\r\n    return this.http.get<Program>(API_URL + `/programs/${id}`)\r\n  }\r\n\r\n  updateProgram(id: number, program: Program): Observable<Program> {\r\n    return this.http.put<Program>(API_URL + `/programs/${id}`, program)\r\n  }\r\n\r\n  deleteProgram(id: number): Observable<Program> {\r\n    return this.http.delete<Program>(API_URL + `/programs/${id}`);\r\n  }\r\n\r\n  getAllModuleByProgram(id: number): Observable<Module[]> {\r\n    return this.http.get<Module[]>(API_URL + `/programs/${id}/modules`);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {environment} from \"../../../environments/environment\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {Student} from \"../../interface/student\";\r\n\r\nconst API_URL = `${environment.apiUrl}`\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StudentService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getAllStudent(): Observable<Student[]> {\r\n    return this.http.get<Student[]>(API_URL + '/students');\r\n  }\r\n\r\n  createStudent(student: Student): Observable<Student> {\r\n    return this.http.post<Student>(API_URL + '/students', student);\r\n  }\r\n\r\n  getStudent(id: number): Observable<Student> {\r\n    return this.http.get<Student>(API_URL + `/students/${id}`)\r\n  }\r\n\r\n  updateStudent(id: number, student: Student): Observable<Student> {\r\n    return this.http.put<Student>(API_URL + `/students/${id}`, student)\r\n  }\r\n\r\n  deleteStudent(id: number): Observable<Student> {\r\n    return this.http.delete<Student>(API_URL + `/students/${id}`);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}